{"version":3,"sources":["js/lazy-load-img.js"],"names":["imgGalleryRef","document","querySelector","options","rootMargin","imgGalleryCallback","entries","observer","forEach","entry","isIntersecting","image","target","style","transform","unobserve","ioImgGallery","IntersectionObserver","observe"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;;AAEA;;AACA;AACA,IAAMA,aAAa,GAAGC,QAAQ,CAACC,aAAT,CAAuB,gBAAvB,CAAtB;AAEA,IAAMC,OAAO,GAAG;AACdC,EAAAA,UAAU,EAAE,KADE,CAEhB;;AAFgB,CAAhB;;AAKA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,OAAD,EAAUC,QAAV,EAAuB;AAChDD,EAAAA,OAAO,CAACE,OAAR,CAAgB,UAAAC,KAAK,EAAI;AACvB,QAAIA,KAAK,CAACC,cAAV,EAA0B;AACxB,UAAMC,KAAK,GAAGF,KAAK,CAACG,MAApB;AACAD,MAAAA,KAAK,CAACE,KAAN,CAAYC,SAAZ,GAAwB,UAAxB;AACAP,MAAAA,QAAQ,CAACQ,SAAT,CAAmBN,KAAK,CAACG,MAAzB;AACD;AACF,GAND;AAOD,CARD;;AAUA,IAAMI,YAAY,GAAG,IAAIC,oBAAJ,CAAyBZ,kBAAzB,EAA6CF,OAA7C,CAArB;AACAa,YAAY,CAACE,OAAb,CAAqBlB,aAArB","file":"lazy-load-img.4e9649d5.js","sourceRoot":"../src","sourcesContent":["// const imgArray = document.querySelectorAll('img[data-lazy]');\n// const options = {\n//   rootMargin: \"100px\",\n// //   threshold: [0.5],\n// };\n\n// const imgLazyLoadCallback = (entries, observer) => {\n//   entries.forEach(entry => {\n//       if (entry.isIntersecting) {\n//           console.log(`sdf`);\n//           const image = entry.target;\n//           const src = image.dataset.lazy;\n//           image.src = src;\n//           image.removeAttribute('data-lazy');\n\n//           const tagPictureRef = image.parentNode;\n//           const arraySourceTags = tagPictureRef.querySelectorAll('source');\n//           arraySourceTags.forEach(source => {\n//               source.srcset = source.dataset.lazy;\n//               source.removeAttribute('data-lazy');\n//           });\n\n//         if (image.hasAttribute('data-gallery')) {\n//             image.style.transform = 'scale(1)';\n//         }\n\n\n//       observer.unobserve(image);\n//     }\n//   });\n// };\n\n// const ioImgLazyLoad = new IntersectionObserver(imgLazyLoadCallback, options);\n// imgArray.forEach(img => ioImgLazyLoad.observe(img));\n\n/* ------------------------------------------ */\n/* -------------------вспливання для картинки галереї--------------- */\nconst imgGalleryRef = document.querySelector('[data-gallery]');\n\nconst options = {\n  rootMargin: \"0px\",\n//   threshold: [0.5],\n};\n\nconst imgGalleryCallback = (entries, observer) => {\n  entries.forEach(entry => {\n    if (entry.isIntersecting) {\n      const image = entry.target;\n      image.style.transform = 'scale(1)';\n      observer.unobserve(entry.target);\n    }\n  });\n};\n\nconst ioImgGallery = new IntersectionObserver(imgGalleryCallback, options);\nioImgGallery.observe(imgGalleryRef);"]}