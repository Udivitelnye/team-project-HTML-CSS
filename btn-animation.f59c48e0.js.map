{"version":3,"sources":["js/btn-animation.js"],"names":["animateButton","e","preventDefault","target","classList","remove","add","setTimeout","bubblyButtons","document","getElementsByClassName","i","length","addEventListener","countCafeRef","querySelector","countFoodRef","maxNumberCafe","Number","textContent","maxNumberFood","printNumbers","from","to","elementRef","interval","sufix","current","setInterval","statStatItemArray","querySelectorAll","options","threshold","statCallback","entries","observer","forEach","entry","isIntersecting","maxNumber","parseInt","includes","unobserve","intersecOb","IntersectionObserver","item","observe","prodListRef","btnArrowArray","btnArrowCallback","style","transform","ioBtnArrow","imgGalleryRef","imgGalleryCallback","ioImgGallery"],"mappings":";AAcA,IAdA,IAAIA,EAAgB,SAASC,GAE3BA,EAAEC,eAEFD,EAAEE,OAAOC,UAAUC,OAAO,WAE1BJ,EAAEE,OAAOC,UAAUE,IAAI,WACvBC,WAAW,WACTN,EAAEE,OAAOC,UAAUC,OAAO,YAC1B,MAGAG,EAAgBC,SAASC,uBAAuB,iBAE3CC,EAAI,EAAGA,EAAIH,EAAcI,OAAQD,IACxCH,EAAcG,GAAGE,iBAAiB,QAASb,GAAe,GAI5D,IAAMc,EAAeL,SAASM,cAAc,qBACtCC,EAAeP,SAASM,cAAc,qBACtCE,EAAgBC,OAAOJ,EAAaK,aACpCC,EAAgBF,OAAOF,EAAaG,aAEpCE,EAAe,SAACC,EAAMC,EAAIC,EAAYC,GAAUC,IAAAA,EAAM,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,GACtDC,EAAUL,EAUdM,YARkB,WAChBJ,EAAWL,YAAcQ,EAAQD,EAC7BC,IAAYJ,IAGhBI,GAAW,IAGUF,IAGzBJ,EAAa,EAAGJ,EAAeH,EAAc,KAC7CO,EAAa,EAAGD,EAAeJ,EAAc,KAK7C,IAAMa,EAAoBpB,SAASqB,iBAAiB,oBAE9CC,EAAU,CAEdC,UAAW,CAAC,KAGRC,EAAe,SAACC,EAASC,GAC7BD,EAAQE,QAAQ,SAAAC,GACVA,GAAAA,EAAMC,eAAgB,CAClBC,IACFb,EADEa,EAAYrB,OAAOsB,SAASH,EAAMlC,OAAOgB,aAE3CkB,EAAMlC,OAAOgB,YAAYsB,SAAS,QACnCf,EAAQ,MAEPJ,IAAAA,EAAOiB,EAAY,GACnBjB,EAAO,IAAKA,EAAO,GACvBD,EAAaC,EAAMiB,EAAWF,EAAMlC,OAAQ,GAAIuB,GAChDS,EAASO,UAAUL,EAAMlC,YAKzBwC,EAAa,IAAIC,qBAAqBX,EAAcF,GAC1DF,EAAkBO,QAAQ,SAAAS,GAAQF,OAAAA,EAAWG,QAAQD,KAGrD,IAAME,EAActC,SAASM,cAAc,iBACrCiC,EAAgBD,EAAYjB,iBAAiB,iBAE7CmB,EAAmB,SAACf,EAASC,GACjCD,EAAQE,QAAQ,SAAAC,GACVA,EAAMC,iBACRD,EAAMlC,OAAO+C,MAAMC,UAAY,mBAC/BhB,EAASO,UAAUL,EAAMlC,YAKzBiD,EAAa,IAAIR,qBAAqBK,EAAkBlB,GAC9DiB,EAAcZ,QAAQ,SAAAS,GAAQO,OAAAA,EAAWN,QAAQD,KAGjD,IAAMQ,EAAgB5C,SAASM,cAAc,kBAEvCuC,EAAqB,SAACpB,EAASC,GACnCD,EAAQE,QAAQ,SAAAC,GACVA,EAAMC,iBACRD,EAAMlC,OAAO+C,MAAMC,UAAY,WAC/BhB,EAASO,UAAUL,EAAMlC,YAKzBoD,EAAe,IAAIX,qBAAqBU,EAAoBvB,GAClEwB,EAAaT,QAAQO","file":"btn-animation.f59c48e0.js","sourceRoot":"../src","sourcesContent":["var animateButton = function(e) {\n\n  e.preventDefault;\n  //reset animation\n  e.target.classList.remove('animate');\n\n  e.target.classList.add('animate');\n  setTimeout(function(){\n    e.target.classList.remove('animate');\n  },700);\n};\n\nvar bubblyButtons = document.getElementsByClassName(\"bubbly-button\");\n\nfor (var i = 0; i < bubblyButtons.length; i++) {\n  bubblyButtons[i].addEventListener('click', animateButton, false);\n}\n\n/* ---------------count script-------------------- */\nconst countCafeRef = document.querySelector('[data-count-cafe]');\nconst countFoodRef = document.querySelector('[data-count-food]');\nconst maxNumberCafe = Number(countCafeRef.textContent);\nconst maxNumberFood = Number(countFoodRef.textContent);\n\nconst printNumbers = (from, to, elementRef, interval, sufix='') => {\n  let current = from;\n\n  const inCrement = () => {\n    elementRef.textContent = current+sufix;\n    if (current === to) {\n      return;\n    }\n    current += 1;\n  }\n\n  setInterval(inCrement, interval);\n}\n\nprintNumbers(0, maxNumberCafe, countCafeRef, 150);\nprintNumbers(0, maxNumberFood, countFoodRef, 100);\n\n\n/* ----------------IntersectionObserver for Number counts------------------- */\n\nconst statStatItemArray = document.querySelectorAll('[data-stat-item]');\n\nconst options = {\n  // rootMargin: \"-100px\",\n  threshold: [0.5],\n};\n\nconst statCallback = (entries, observer) => {\n  entries.forEach(entry => {\n    if (entry.isIntersecting) {\n      const maxNumber = Number.parseInt(entry.target.textContent);\n      let sufix;\n      if (entry.target.textContent.includes('kg')) {\n         sufix = 'kg';\n        }\n      let from = maxNumber - 50;\n      if (from < 0) { from = 0 };\n      printNumbers(from, maxNumber, entry.target, 30, sufix);\n      observer.unobserve(entry.target);\n    }\n  });\n};\n\nconst intersecOb = new IntersectionObserver(statCallback, options);\nstatStatItemArray.forEach(item => intersecOb.observe(item));\n\n/* -------------------для кнопок стрілок в секції продукти--------------- */\nconst prodListRef = document.querySelector('.product_list');\nconst btnArrowArray = prodListRef.querySelectorAll('.button-arrow');\n\nconst btnArrowCallback = (entries, observer) => {\n  entries.forEach(entry => {\n    if (entry.isIntersecting) {\n      entry.target.style.transform = 'translateX(-50%)';\n      observer.unobserve(entry.target);\n    }\n  });\n};\n\nconst ioBtnArrow = new IntersectionObserver(btnArrowCallback, options);\nbtnArrowArray.forEach(item => ioBtnArrow.observe(item));\n\n/* -------------------для картинки галереї--------------- */\nconst imgGalleryRef = document.querySelector('[data-gallery]');\n\nconst imgGalleryCallback = (entries, observer) => {\n  entries.forEach(entry => {\n    if (entry.isIntersecting) {\n      entry.target.style.transform = 'scale(1)';\n      observer.unobserve(entry.target);\n    }\n  });\n};\n\nconst ioImgGallery = new IntersectionObserver(imgGalleryCallback, options);\nioImgGallery.observe(imgGalleryRef);"]}