{"version":3,"sources":["index.js"],"names":["menuBtnRef","document","querySelector","menuBlockRef","headerRef","bodyRef","windowHeight","window","innerHeight","addEventListener","getBoundingClientRect","height","removeAttribute","style","expanded","getAttribute","setAttribute","classList","toggle","refs","openModalBtn","closeModalBtn","backdrop","onBackdropClick","event","target","currentTarget","toggleModal","contains","onPressEscape","removeEventListener","code","modalRef","modalFocus","focus","outline","checkboxIconRef","checkboxInputRef","checkboxLabelRef","addEventListenerAddChecked","onPressEnterAdd","add","onPressEnterRemove","remove","byClickChecked","hasAttribute","formModalRef","takeFormData","preventDefault","formRef","formData","FormData","submittedData","forEach","value","key","console","dir"],"mappings":";;;AAuIA,aAvIA,QAAA,oBAGE,IAAMA,EAAaC,SAASC,cAAc,sBACpCC,EAAeF,SAASC,cAAc,qBACtCE,EAAYH,SAASC,cAAc,iBACrCG,EAAUJ,SAASC,cAAc,QACjCI,EAAeC,OAAOC,YAE5BR,EAAWS,iBAAiB,QAAS,WACGN,EAAaO,wBAAzCC,QACWL,EAAeH,EAAaS,gBAAgB,SAAWT,EAAaU,MAAMF,OAAUL,GAAAA,OAAAA,EAAvG,MAEMQ,IAAAA,EACyC,SAA7Cd,EAAWe,aAAa,mBAA+B,EACzDf,EAAWgB,aAAa,iBAAkBF,GAE1Cd,EAAWiB,UAAUC,OAAO,WAC5Bf,EAAac,UAAUC,OAAO,WAC9Bf,EAAac,UAAUC,OAAO,YAC9Bb,EAAQY,UAAUC,OAAO,oBACzBd,EAAUa,UAAUC,OAAO,oBAC3Bd,EAAUa,UAAUC,OAAO,uBAK7B,IAAMC,EAAO,CACXC,aAAcnB,SAASC,cAAc,qBACrCmB,cAAepB,SAASC,cAAc,sBACtCoB,SAAUrB,SAASC,cAAc,oBASnC,SAASqB,EAAgBC,GACjBA,EAAMC,SAAWD,EAAME,eACzBC,IAIN,SAASA,IACPR,EAAKG,SAASL,UAAUW,SAAS,aAC7BrB,OAAOE,iBAAiB,UAAWoB,GACnCtB,OAAOuB,oBAAoB,UAAWD,GAC1CV,EAAKG,SAASL,UAAUC,OAAO,aAGjC,SAASW,EAAcL,GACF,WAAfA,EAAMO,MACRJ,IArBAR,EAAKC,eACLD,EAAKC,aAAaX,iBAAiB,QAASkB,GAC5CR,EAAKE,cAAcZ,iBAAiB,QAASkB,GAC7CR,EAAKG,SAASb,iBAAiB,QAASc,IAuB5C,IAAMS,EAAW/B,SAASC,cAAc,gBAIxC,SAAS+B,IACPD,EAASE,QACTF,EAASnB,MAAMsB,QAAU,OAJ3BhB,EAAKC,aAAaX,iBAAiB,QAASwB,GAQ5C,IAAMG,EAAkBnC,SAASC,cAAc,wBACzCmC,EAAmBpC,SAASC,cAAc,yBAC1CoC,EAAmBrC,SAASC,cAAc,yBAMhD,SAASqC,IACPhC,OAAOE,iBAAiB,UAAW+B,GAGrC,SAASA,EAAgBhB,GAChBA,EAAMC,OAAOR,UAAUW,SAAS,kBAAmC,UAAfJ,EAAMO,OAC7DM,EAAiBrB,aAAa,UAAW,IACzCoB,EAAgBnB,UAAUwB,IAAI,WAC9BlC,OAAOuB,oBAAoB,UAAWU,GACtCjC,OAAOE,iBAAiB,UAAWiC,IAIzC,SAASA,EAAmBlB,GACtBA,EAAMC,OAAOR,UAAUW,SAAS,kBAAmC,UAAfJ,EAAMO,OAC5DM,EAAiBzB,gBAAgB,WACjCwB,EAAgBnB,UAAU0B,OAAO,WACjCpC,OAAOuB,oBAAoB,UAAWY,GACtCH,KAIJ,SAASK,EAAepB,IAClBA,EAAMC,OAAOR,UAAUW,SAAS,wBAChCJ,EAAMC,OAAOR,UAAUW,SAAS,oBAC1BS,EAAiBQ,aAAa,YAClCR,EAAiBzB,gBAAgB,WACjCwB,EAAgBnB,UAAU0B,OAAO,WACjCJ,MAEAF,EAAiBrB,aAAa,UAAW,IACzCoB,EAAgBnB,UAAUwB,IAAI,WAC9BlC,OAAOE,iBAAiB,UAAWiC,KAnC3CJ,EAAiB7B,iBAAiB,QAASmC,GAC3CR,EAAgB3B,iBAAiB,QAAS8B,KA0C1C,IAAMO,EAAe7C,SAASC,cAAc,qBAEtC6C,EAAe,SAAAvB,GACnBA,EAAMwB,iBAEAC,IAAAA,EAAUzB,EAAMC,OAChByB,EAAW,IAAIC,SAASF,GACxBG,EAAgB,GAEtBF,EAASG,QAAQ,SAACC,EAAOC,GACvBH,EAAcG,GAAOD,IAEvBE,QAAQC,IAAIL,IAGXN,GACDA,EAAarC,iBAAiB,SAAUsC","file":"src.f4a5bc73.js","sourceRoot":"../src","sourcesContent":["import \"./sass/main.scss\";\n\n/* --------mobile MENU------------- */\n  const menuBtnRef = document.querySelector(\"[data-menu-button]\");\n  const menuBlockRef = document.querySelector(\"[data-menu-block]\");\n  const headerRef = document.querySelector(\"[data-header]\");\nconst bodyRef = document.querySelector(\"body\");\nconst windowHeight = window.innerHeight;\n\nmenuBtnRef.addEventListener(\"click\", () => {\n    const { height: menuBlockHeight } = menuBlockRef.getBoundingClientRect();\n    menuBlockHeight == windowHeight ? menuBlockRef.removeAttribute('style') : menuBlockRef.style.height=`${windowHeight}px`;\n\n    const expanded =\n      menuBtnRef.getAttribute(\"aria-expanded\") === \"true\" || false;\n    menuBtnRef.setAttribute(\"aria-expanded\", !expanded);\n\n    menuBtnRef.classList.toggle(\"is-open\");\n    menuBlockRef.classList.toggle(\"is-open\");\n    menuBlockRef.classList.toggle(\"is-close\");\n    bodyRef.classList.toggle(\"mobile-menu-open\");\n    headerRef.classList.toggle(\"mobile-menu-open\");\n    headerRef.classList.toggle(\"mobile-menu-close\");\n  });\n/* =========================================== */\n\n/* --------MODAL window open/close------------- */\n  const refs = {\n    openModalBtn: document.querySelector(\"[data-modal-open]\"),\n    closeModalBtn: document.querySelector(\"[data-modal-close]\"),\n    backdrop: document.querySelector(\"[data-backdrop]\"),\n  };\n\n  if (refs.openModalBtn) {\n      refs.openModalBtn.addEventListener(\"click\", toggleModal);\n      refs.closeModalBtn.addEventListener(\"click\", toggleModal);\n      refs.backdrop.addEventListener('click', onBackdropClick);\n  };\n\n  function onBackdropClick(event) {\n      if (event.target === event.currentTarget) {\n        toggleModal();\n      };\n  };\n\n  function toggleModal() {\n    refs.backdrop.classList.contains(\"is-hidden\")\n      ? window.addEventListener('keydown', onPressEscape)\n      : window.removeEventListener('keydown', onPressEscape);\n    refs.backdrop.classList.toggle(\"is-hidden\");\n  };\n\n  function onPressEscape(event) {\n    if (event.code === 'Escape') {\n      toggleModal();\n    };\n  };\n\n/* add focus on modal */\n  const modalRef = document.querySelector('[data-modal]');\n\n  refs.openModalBtn.addEventListener('click', modalFocus);\n\n  function modalFocus() {\n    modalRef.focus();\n    modalRef.style.outline = 'none';\n  }\n\n/* CHECKBOX-icon in modal add attribute CHECKED */\n  const checkboxIconRef = document.querySelector('[data-checkbox-icon]');\n  const checkboxInputRef = document.querySelector('[data-checkbox-input]');\n  const checkboxLabelRef = document.querySelector('[data-checkbox-label]');\n\n\n  checkboxLabelRef.addEventListener('click', byClickChecked);\n  checkboxIconRef.addEventListener('focus', addEventListenerAddChecked());\n\n  function addEventListenerAddChecked() {\n    window.addEventListener('keydown', onPressEnterAdd);\n  };\n\n  function onPressEnterAdd(event) {\n      if ( event.target.classList.contains('checkbox-icon') && event.code === 'Enter') {\n        checkboxInputRef.setAttribute('checked', '');\n        checkboxIconRef.classList.add('checked');\n        window.removeEventListener('keydown', onPressEnterAdd);\n        window.addEventListener('keydown', onPressEnterRemove);\n      }\n  };\n\n  function onPressEnterRemove(event) {\n    if (event.target.classList.contains('checkbox-icon') && event.code === 'Enter') {\n      checkboxInputRef.removeAttribute('checked');\n      checkboxIconRef.classList.remove('checked');\n      window.removeEventListener('keydown', onPressEnterRemove);\n      addEventListenerAddChecked();\n    }\n  };\n\n  function byClickChecked(event) {\n    if (event.target.classList.contains('form__text-checkbox') ||\n        event.target.classList.contains('checkbox-icon')) {\n          if (checkboxInputRef.hasAttribute('checked')) {\n          checkboxInputRef.removeAttribute('checked');\n          checkboxIconRef.classList.remove('checked');\n          addEventListenerAddChecked();\n          } else {\n          checkboxInputRef.setAttribute('checked', '');\n          checkboxIconRef.classList.add('checked');\n          window.addEventListener('keydown', onPressEnterRemove);\n          };\n    };\n  };\n\n/* ========================================= */\n\n/* --------FORM in modal window------------- */\n  const formModalRef = document.querySelector('[data-form-modal]');\n\n  const takeFormData = event => {\n    event.preventDefault();//забороняє браузеру відправляти форму при натисканні кнопки\n    // console.dir(event.target.elements); //так можна отримати доступ до елементів форми\n    const formRef = event.target;// тут міститься посилання на форму\n    const formData = new FormData(formRef);//створюємо новий об'єкт\n    const submittedData = {};//об'єкт для збору даних з форми, який надішлеться на бекенд\n\n    formData.forEach((value, key) => {//цей об'єкт просто має ф-цію форіч і дані інпутів у вигляді value та key = name інпута\n      submittedData[key] = value;//записуємо дані в об'єкт\n    });\n    console.dir(submittedData);\n  };\n\n  if(formModalRef){\n    formModalRef.addEventListener('submit', takeFormData);\n  };\n/* --------------------- */\n\n"]}