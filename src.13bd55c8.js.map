{"version":3,"sources":["index.js"],"names":["menuBtnRef","document","querySelector","menuBlockRef","headerContainerRef","windowHeight","window","innerHeight","bodyRef","classList","add","blockMenuOpenClose","menuBlockHeight","getBoundingClientRect","height","headerContainerHeight","removeAttribute","style","paddingTop","expanded","getAttribute","setAttribute","toggle","menuBlockParentRef","parentNode","contains","wrapperRef","createElement","appendChild","setTimeout","addEventListener","onWrapperClick","event","target","currentTarget","remove","resizeWindow","innerWidth","refs","openModalBtn","closeModalBtn","backdrop","onBackdropClick","toggleModal","onPressEscape","removeEventListener","code","modalRef","modalFocus","focus","outline","checkboxIconRef","checkboxInputRef","checkboxLabelRef","addEventListenerAddChecked","onPressEnterAdd","onPressEnterRemove","byClickChecked","hasAttribute","formModalRef","takeFormData","preventDefault","formRef","formData","FormData","submittedData","forEach","value","key","console","dir"],"mappings":"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","file":"src.13bd55c8.js","sourceRoot":"../src","sourcesContent":["import \"./sass/main.scss\";\n\n/* --------mobile MENU------------- */\nconst menuBtnRef = document.querySelector(\"[data-menu-button]\");\nconst menuBlockRef = document.querySelector(\"[data-menu-block]\");\nconst headerContainerRef = document.querySelector('[data-header-container]');\nconst windowHeight = window.innerHeight;\nconst bodyRef = document.querySelector(\"body\");\n      bodyRef.classList.add('mobile-menu-close');\n\nconst blockMenuOpenClose = () => {\n  const { height: menuBlockHeight} = menuBlockRef.getBoundingClientRect();\n  const { height: headerContainerHeight } = headerContainerRef.getBoundingClientRect();\n\n  if (menuBlockHeight === windowHeight) {\n    headerContainerRef.removeAttribute('style');\n    menuBlockRef.removeAttribute('style');\n  } else {\n    menuBlockRef.style.height = `${windowHeight}px`;\n    menuBlockRef.style.paddingTop = `60px`;\n    headerContainerRef.style.height = `${headerContainerHeight}px`;\n  }\n\n  const expanded = menuBtnRef.getAttribute(\"aria-expanded\") === \"true\" || false;\n  menuBtnRef.setAttribute(\"aria-expanded\", !expanded);\n\n  bodyRef.classList.toggle(\"mobile-menu-open\");\n  bodyRef.classList.toggle(\"mobile-menu-close\");\n\n/* ----------------------------додаю бекдроп для блоку меню---------------------------- */\n  const menuBlockParentRef = menuBlockRef.parentNode;\n  if (menuBlockParentRef.classList.contains('container')) {\n    const wrapperRef = document.createElement(\"div\");\n    wrapperRef.classList.add('wrapper');\n    wrapperRef.appendChild(menuBlockRef);\n    menuBlockParentRef.appendChild(wrapperRef);\n    setTimeout(()=> wrapperRef.classList.add('animate'), 250);\n\n    /* -----вішаю на обгортку умови закриття по кліку та натисканням ескейп---- */\n    wrapperRef.addEventListener('click', onWrapperClick)  ;\n\n    function onWrapperClick(event) {\n      if (event.target === event.currentTarget) {\n        toggleWrapper();\n      };\n    };\n\n    function toggleWrapper() {\n      bodyRef.classList.toggle(\"mobile-menu-open\");\n      bodyRef.classList.toggle(\"mobile-menu-close\");\n      headerContainerRef.removeAttribute('style');\n      menuBlockRef.removeAttribute('style');\n      menuBlockParentRef.appendChild(menuBlockRef);\n      const wrapperRef = document.querySelector('.wrapper');\n      wrapperRef.remove();\n    };\n  } else {\n    /* ----видаляю бекдроп для блоку меню---- */\n    const wrapperRef = document.querySelector('.wrapper');\n    const menuBlockGrandPaRef = menuBlockParentRef.parentNode;\n    menuBlockGrandPaRef.appendChild(menuBlockRef);\n    wrapperRef.remove();\n  }\n  /* ------------------кінець коду по бекдропу меню------------------------------ */\n}\n\n\n\nconst resizeWindow = () => {\n  if (window.innerWidth >= 1200 && bodyRef.classList.contains(\"mobile-menu-open\")) {\n    bodyRef.classList.toggle(\"mobile-menu-open\");\n    bodyRef.classList.toggle(\"mobile-menu-close\");\n    menuBlockRef.removeAttribute('style');\n    headerContainerRef.removeAttribute('style');\n\n    /* видаляю обгортку для меню блок, якщо вона є */\n    const menuBlockParentRef = menuBlockRef.parentNode;\n    if (menuBlockParentRef.classList.contains('wrapper')) {\n      const menuBlockGrandPaRef = menuBlockParentRef.parentNode;\n      menuBlockGrandPaRef.appendChild(menuBlockRef);\n      menuBlockParentRef.remove();\n    }\n    /* ------------------кінець коду по обгортці меню------------ */\n  }\n}\n\nmenuBtnRef.addEventListener(\"click\", blockMenuOpenClose);\nwindow.addEventListener('resize', resizeWindow);\n/* =========================================== */\n\n/* --------MODAL window open/close------------- */\n  const refs = {\n    openModalBtn: document.querySelector(\"[data-modal-open]\"),\n    closeModalBtn: document.querySelector(\"[data-modal-close]\"),\n    backdrop: document.querySelector(\"[data-backdrop]\"),\n  };\n\n  if (refs.openModalBtn) {\n      refs.openModalBtn.addEventListener(\"click\", toggleModal);\n      refs.closeModalBtn.addEventListener(\"click\", toggleModal);\n      refs.backdrop.addEventListener('click', onBackdropClick);\n  };\n\n  function onBackdropClick(event) {\n      if (event.target === event.currentTarget) {\n        toggleModal();\n      };\n  };\n\n  function toggleModal() {\n    refs.backdrop.classList.contains(\"is-hidden\")\n      ? window.addEventListener('keydown', onPressEscape)\n      : window.removeEventListener('keydown', onPressEscape);\n    refs.backdrop.classList.toggle(\"is-hidden\");\n  };\n\n  function onPressEscape(event) {\n    if (event.code === 'Escape') {\n      toggleModal();\n    };\n  };\n\n/* add focus on modal */\n  const modalRef = document.querySelector('[data-modal]');\n\n  refs.openModalBtn.addEventListener('click', modalFocus);\n\n  function modalFocus() {\n    modalRef.focus();\n    modalRef.style.outline = 'none';\n  }\n\n/* CHECKBOX-icon in modal add attribute CHECKED */\n  const checkboxIconRef = document.querySelector('[data-checkbox-icon]');\n  const checkboxInputRef = document.querySelector('[data-checkbox-input]');\n  const checkboxLabelRef = document.querySelector('[data-checkbox-label]');\n\n\n  checkboxLabelRef.addEventListener('click', byClickChecked);\n  checkboxIconRef.addEventListener('focus', addEventListenerAddChecked());\n\n  function addEventListenerAddChecked() {\n    window.addEventListener('keydown', onPressEnterAdd);\n  };\n\n  function onPressEnterAdd(event) {\n      if ( event.target.classList.contains('checkbox-icon') && event.code === 'Enter') {\n        checkboxInputRef.setAttribute('checked', '');\n        checkboxIconRef.classList.add('checked');\n        window.removeEventListener('keydown', onPressEnterAdd);\n        window.addEventListener('keydown', onPressEnterRemove);\n      }\n  };\n\n  function onPressEnterRemove(event) {\n    if (event.target.classList.contains('checkbox-icon') && event.code === 'Enter') {\n      checkboxInputRef.removeAttribute('checked');\n      checkboxIconRef.classList.remove('checked');\n      window.removeEventListener('keydown', onPressEnterRemove);\n      addEventListenerAddChecked();\n    }\n  };\n\n  function byClickChecked(event) {\n    if (event.target.classList.contains('form__text-checkbox') ||\n        event.target.classList.contains('checkbox-icon')) {\n          if (checkboxInputRef.hasAttribute('checked')) {\n          checkboxInputRef.removeAttribute('checked');\n          checkboxIconRef.classList.remove('checked');\n          addEventListenerAddChecked();\n          } else {\n          checkboxInputRef.setAttribute('checked', '');\n          checkboxIconRef.classList.add('checked');\n          window.addEventListener('keydown', onPressEnterRemove);\n          };\n    };\n  };\n\n/* ========================================= */\n\n/* --------FORM in modal window------------- */\n  const formModalRef = document.querySelector('[data-form-modal]');\n\n  const takeFormData = event => {\n    event.preventDefault();//забороняє браузеру відправляти форму при натисканні кнопки\n    // console.dir(event.target.elements); //так можна отримати доступ до елементів форми\n    const formRef = event.target;// тут міститься посилання на форму\n    const formData = new FormData(formRef);//створюємо новий об'єкт\n    const submittedData = {};//об'єкт для збору даних з форми, який надішлеться на бекенд\n\n    formData.forEach((value, key) => {//цей об'єкт просто має ф-цію форіч і дані інпутів у вигляді value та key = name інпута\n      submittedData[key] = value;//записуємо дані в об'єкт\n    });\n    console.dir(submittedData);\n  };\n\n  if(formModalRef){\n    formModalRef.addEventListener('submit', takeFormData);\n  };\n/* --------------------- */\n\n"]}