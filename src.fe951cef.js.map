{"version":3,"sources":["index.js"],"names":["menuBtnRef","document","querySelector","menuBlockRef","headerContainerRef","windowHeight","window","innerHeight","bodyRef","classList","add","blockMenuOpenClose","menuBlockHeight","getBoundingClientRect","height","headerContainerHeight","removeAttribute","style","paddingTop","expanded","getAttribute","setAttribute","toggle","menuBlockParentRef","parentNode","contains","wrapperRef","createElement","appendChild","setTimeout","addEventListener","onWrapperClick","event","target","currentTarget","remove","resizeWindow","console","log","innerWidth","_","throttle","menuLinkArray","querySelectorAll","blockMenuCloseByLink","AddEvListToLink","listOfLinks","forEach","link","refs","openModalBtn","closeModalBtn","backdrop","onBackdropClick","toggleModal","removeEventListener","onPressEscape","code","modalRef","modalFocus","focus","outline","checkboxIconRef","checkboxInputRef","checkboxLabelRef","addEventListenerAddChecked","onPressEnterAdd","onPressEnterRemove","byClickChecked","hasAttribute","formModalRef","takeFormData","preventDefault","formRef","formInputArray","checked","input","borderColor","formData","FormData","submittedData","value","key","dir","modalInputArray","checkedInput","pattern","name","test","outlineColor","debounce","anchorsArray","rewindTo","nameID","scrollIntoView","behavior","block","anchor"],"mappings":"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","file":"src.fe951cef.js","sourceRoot":"../src","sourcesContent":["import \"./sass/main.scss\";\n\n/* --------mobile MENU------------- */\nconst menuBtnRef = document.querySelector(\"[data-menu-button]\");\nconst menuBlockRef = document.querySelector(\"[data-menu-block]\");\nconst headerContainerRef = document.querySelector('[data-header-container]');\nconst windowHeight = window.innerHeight;\nconst bodyRef = document.querySelector(\"body\");\n      bodyRef.classList.add('mobile-menu-close');\n\nconst blockMenuOpenClose = () => {\n  const { height: menuBlockHeight} = menuBlockRef.getBoundingClientRect();\n  const { height: headerContainerHeight } = headerContainerRef.getBoundingClientRect();\n\n  if (menuBlockHeight === windowHeight) {\n    headerContainerRef.removeAttribute('style');\n    menuBlockRef.removeAttribute('style');\n  } else {\n    menuBlockRef.style.height = `${windowHeight}px`;\n    menuBlockRef.style.paddingTop = `60px`;\n    headerContainerRef.style.height = `${headerContainerHeight}px`;\n  }\n\n  const expanded = menuBtnRef.getAttribute(\"aria-expanded\") === \"true\" || false;\n  menuBtnRef.setAttribute(\"aria-expanded\", !expanded);\n\n  bodyRef.classList.toggle(\"mobile-menu-open\");\n  bodyRef.classList.toggle(\"mobile-menu-close\");\n\n/* ----------------------------додаю бекдроп для блоку меню---------------------------- */\n  const menuBlockParentRef = menuBlockRef.parentNode;\n  if (menuBlockParentRef.classList.contains('container')) {\n    const wrapperRef = document.createElement(\"div\");\n    wrapperRef.classList.add('wrapper');\n    wrapperRef.appendChild(menuBlockRef);\n    menuBlockParentRef.appendChild(wrapperRef);\n    setTimeout(()=> wrapperRef.classList.add('animate'), 250);\n\n    /* -----вішаю на обгортку умови закриття по кліку та натисканням ескейп---- */\n    wrapperRef.addEventListener('click', onWrapperClick)  ;\n\n    function onWrapperClick(event) {\n      if (event.target === event.currentTarget) {\n        toggleWrapper();\n      };\n    };\n\n    function toggleWrapper() {\n      bodyRef.classList.toggle(\"mobile-menu-open\");\n      bodyRef.classList.toggle(\"mobile-menu-close\");\n      headerContainerRef.removeAttribute('style');\n      menuBlockRef.removeAttribute('style');\n      menuBlockParentRef.appendChild(menuBlockRef);\n      const wrapperRef = document.querySelector('.wrapper');\n      wrapperRef.remove();\n    };\n  } else {\n    /* ----видаляю бекдроп для блоку меню---- */\n    const wrapperRef = document.querySelector('.wrapper');\n    const menuBlockGrandPaRef = menuBlockParentRef.parentNode;\n    menuBlockGrandPaRef.appendChild(menuBlockRef);\n    wrapperRef.remove();\n  }\n  /* ------------------кінець коду по бекдропу меню------------------------------ */\n}\n\n\n\nconst resizeWindow = () => {\n   console.log('resize');\n    if (window.innerWidth >= 1200 && bodyRef.classList.contains(\"mobile-menu-open\")) {\n    bodyRef.classList.toggle(\"mobile-menu-open\");\n    bodyRef.classList.toggle(\"mobile-menu-close\");\n    menuBlockRef.removeAttribute('style');\n    headerContainerRef.removeAttribute('style');\n\n    /* видаляю обгортку для меню блок, якщо вона є */\n    const menuBlockParentRef = menuBlockRef.parentNode;\n    if (menuBlockParentRef.classList.contains('wrapper')) {\n      const menuBlockGrandPaRef = menuBlockParentRef.parentNode;\n      menuBlockGrandPaRef.appendChild(menuBlockRef);\n      menuBlockParentRef.remove();\n\n    }\n    /* ------------------кінець коду по обгортці меню------------ */\n  }\n}\n\nmenuBtnRef.addEventListener(\"click\", blockMenuOpenClose);\nwindow.addEventListener('resize', _.throttle(resizeWindow, 500));\n\n/* ------вішаю на лінки в меню умову закриття меню на мобілці------- */\nconst menuLinkArray = document.querySelectorAll(\"[data-menu-block] .link\");\n\nconst blockMenuCloseByLink = () => {\n  if (window.innerWidth < 768 && bodyRef.classList.contains(\"mobile-menu-open\")) {\n    blockMenuOpenClose();\n  }\n}\n\nconst AddEvListToLink = (listOfLinks) => {\n  listOfLinks.forEach(link => link.addEventListener(\"click\", blockMenuCloseByLink));\n}\n\nAddEvListToLink(menuLinkArray);\n\n/* =========================================== */\n\n/* --------MODAL window open/close------------- */\n  const refs = {\n    openModalBtn: document.querySelector(\"[data-modal-open]\"),\n    closeModalBtn: document.querySelector(\"[data-modal-close]\"),\n    backdrop: document.querySelector(\"[data-backdrop]\"),\n  };\n\n  if (refs.openModalBtn) {\n      refs.openModalBtn.addEventListener(\"click\", toggleModal);\n      refs.closeModalBtn.addEventListener(\"click\", toggleModal);\n      refs.backdrop.addEventListener('click', onBackdropClick);\n  };\n\n  function onBackdropClick(event) {\n      if (event.target === event.currentTarget) {\n        toggleModal();\n      };\n  };\n\n  function toggleModal() {\n    !refs.backdrop.classList.contains(\"is-open\")\n      ? window.addEventListener('keydown', onPressEscape)\n      : window.removeEventListener('keydown', onPressEscape);\n    refs.backdrop.classList.toggle(\"is-open\");\n  };\n\n  function onPressEscape(event) {\n    if (event.code === 'Escape') {\n      toggleModal();\n    };\n  };\n\n/* add focus on modal */\n  const modalRef = document.querySelector('[data-modal]');\n\n  refs.openModalBtn.addEventListener('click', modalFocus);\n\n  function modalFocus() {\n    modalRef.focus();\n    modalRef.style.outline = 'none';\n  }\n\n/* CHECKBOX-icon in modal add attribute CHECKED */\n  const checkboxIconRef = document.querySelector('[data-checkbox-icon]');\n  const checkboxInputRef = document.querySelector('[data-checkbox-input]');\n  const checkboxLabelRef = document.querySelector('[data-checkbox-label]');\n\n\n  checkboxLabelRef.addEventListener('click', byClickChecked);\n  checkboxIconRef.addEventListener('focus', addEventListenerAddChecked());\n\n  function addEventListenerAddChecked() {\n    window.addEventListener('keydown', onPressEnterAdd);\n  };\n\n  function onPressEnterAdd(event) {\n      if ( event.target.classList.contains('checkbox-icon') && event.code === 'Enter') {\n        checkboxInputRef.setAttribute('checked', '');\n        checkboxIconRef.classList.add('checked');\n        window.removeEventListener('keydown', onPressEnterAdd);\n        window.addEventListener('keydown', onPressEnterRemove);\n      }\n  };\n\n  function onPressEnterRemove(event) {\n    if (event.target.classList.contains('checkbox-icon') && event.code === 'Enter') {\n      checkboxInputRef.removeAttribute('checked');\n      checkboxIconRef.classList.remove('checked');\n      window.removeEventListener('keydown', onPressEnterRemove);\n      addEventListenerAddChecked();\n    }\n  };\n\n  function byClickChecked(event) {\n    if (event.target.classList.contains('form__text-checkbox') ||\n        event.target.classList.contains('checkbox-icon')) {\n          if (checkboxInputRef.hasAttribute('checked')) {\n          checkboxInputRef.removeAttribute('checked');\n          checkboxIconRef.classList.remove('checked');\n          addEventListenerAddChecked();\n          } else {\n          checkboxInputRef.setAttribute('checked', '');\n          checkboxIconRef.classList.add('checked');\n          window.addEventListener('keydown', onPressEnterRemove);\n          };\n    };\n  };\n\n/* ========================================= */\n\n/* --------FORM in modal window------------- */\n  const formModalRef = document.querySelector('[data-form-modal]');\n\n  const takeFormData = event => {\n    event.preventDefault();//забороняє браузеру відправляти форму при натисканні кнопки\n    // console.dir(event.target.elements); //так можна отримати доступ до елементів форми\n    const formRef = event.target;// тут міститься посилання на форму\n    /* -------------- */\n    const formInputArray = formRef.querySelectorAll('input');\n    let checked = true;\n      formInputArray.forEach(input => {\n        if (!input.hasAttribute('checked')) {\n          input.style.borderColor = '#d41443';\n          if (input.getAttribute('type')==='checkbox') {\n            const checkboxIconRef = formRef.querySelector('.checkbox-icon');\n            checkboxIconRef.classList.add('border-not-checked');\n          };\n        checked = false;\n      }\n    });\n\n    if (!checked) {\n      console.log('not all inputs checked');\n      return;\n    };\n\n    /* -------------- */\n    const formData = new FormData(formRef);//створюємо новий об'єкт\n    const submittedData = {};//об'єкт для збору даних з форми, який надішлеться на бекенд\n\n    formData.forEach((value, key) => {//цей об'єкт просто має ф-цію форіч і дані інпутів у вигляді value та key = name інпута\n      submittedData[key] = value;//записуємо дані в об'єкт\n    });\n\n    console.dir(submittedData); //показує в консолі обєкт з даними\n    toggleModal();// закриває форму\n    formInputArray.forEach(input => {\n      input.value = '';\n      input.removeAttribute('checked');\n    });\n    /* --------видаляю все з чекбокса----------- */\n    checkboxIconRef.classList.remove('border-not-checked');\n    checkboxInputRef.removeAttribute('checked');\n    checkboxIconRef.classList.remove('checked');\n    window.removeEventListener('keydown', onPressEnterRemove);\n    addEventListenerAddChecked();\n    /* --------кінець видаляю все з чекбокса----------- */\n  };\n\n  if(formModalRef){\n    formModalRef.addEventListener('submit', takeFormData);\n  };\n/* --------------------- */\n/* ---------перевірка заповнення INPUT в модалці------------ */\nconst modalInputArray = document.querySelectorAll('[data-form-modal] input');\n\nconst checkedInput = (event) => {\n  let pattern;\n\n  if (event.target.name === \"name\") {\n    pattern = /^[a-zA-ZА-Яа-яЁё\\s]+$/;\n  }\n  if (event.target.name === \"tel\") {\n    pattern = /^[0-9]{9,12}(\\s*)?$/;\n  }\n  if (event.target.name === \"email\") {\n    pattern = /^([a-z0-9_\\.-])+@[a-z0-9-]+\\.([a-z]{2,4}\\.)?[a-z]{2,4}$/;\n  }\n\n  if (!pattern.test(event.target.value)) {\n    event.target.style.outlineColor = '#d41443';\n    event.target.removeAttribute('checked');\n    } else {\n    event.target.style.outlineColor = 'inherit';\n    event.target.style.borderColor = 'rgba(33, 33, 33, 0.2)';\n    event.target.setAttribute('checked', '');\n    }\n\n};\n\nmodalInputArray.forEach(input => input.addEventListener('input', _.debounce(checkedInput, 500)));\n\n\n/* -----------плавний скролінг------------- */\nconst anchorsArray = document.querySelectorAll('a[href*=\"#\"]')\n\nconst rewindTo = (event) => {\n  event.preventDefault();\n  const nameID = event.target.getAttribute('href');\n  const nameIDRef = document.querySelector(nameID);\n  nameIDRef.scrollIntoView({\n      behavior: 'smooth',\n      block: 'start'\n    })\n};\n\nanchorsArray.forEach(anchor => {\n  anchor.addEventListener('click', rewindTo);\n})\n\n\n"]}